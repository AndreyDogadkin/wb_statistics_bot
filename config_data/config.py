import datetime
from dataclasses import dataclass
from pathlib import Path

from aiogram import types
from environs import Env
from pydantic_settings import BaseSettings

BOT_COMMANDS = [
    types.BotCommand(command='help', description='‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.'),
    types.BotCommand(command='token', description='üîë –î–æ–±–∞–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω.'),
    types.BotCommand(command='favorites', description='‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã.'),
    types.BotCommand(command='get_stats', description='üìà –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.'),
    types.BotCommand(command='my_limits', description='üíØ –ú–æ–∏ –ª–∏–º–∏—Ç—ã.'),
]

PAGINATION_SIZE = 5

REQUESTS_PER_DAY_LIMIT = 40
DAY_LIMIT = 6
DAY_LIMIT_DELTA = datetime.timedelta(hours=DAY_LIMIT)

MAX_LEN_FAVORITES = 5

BASE_DIR = Path(__file__).resolve().parent.parent

DB_TEST_PATH = BASE_DIR / 'test_database.sqlite3'


class BotSettings(BaseSettings):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞."""

    TEST_SERVER: bool
    TG_TOKEN: str
    NGROK_URL: str
    ADMINS: list


class DatabaseSettings(BaseSettings):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""

    DB_PROD: bool
    DB_URL_TEST: str = f'sqlite+aiosqlite:///{DB_TEST_PATH}'
    DB_URL: str
    DB_PASSWORD: str


@dataclass
class MainConfig:
    bot: BotSettings
    database: DatabaseSettings


def get_config():
    Env().read_env()
    return MainConfig(bot=BotSettings(), database=DatabaseSettings())


main_config = get_config()
